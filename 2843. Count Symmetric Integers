class Solution {
    public int[] len(int num){
        int[] arr=new int[2];
        int sum=0,c=0,r=0;
        while(num!=0){
            r=num%10;
            sum+=r;
            num/=10;
            c++;
        }
        arr[0]=c;
        arr[1]=sum;
        return arr;
    }
    public boolean sum(int n,int s,int c){
        int sum=0,r=0;
        while(c!=0){
            r=n%10;
            sum+=r;
            n/=10;
            c--;
        }
        if((s-sum)==sum) return true;
        return false;
    }
    public int countSymmetricIntegers(int low, int high) {
        int[] arr=new int[2];
        int count=0;
        for(int i=low;i<=high;i++){
            arr=len(i);
            if(arr[0]%2==0 && sum(i,arr[1],(arr[0]/2))){
                count++;
            }
        }
        return count;
    }
}
