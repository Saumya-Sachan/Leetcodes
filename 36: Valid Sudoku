class Solution {
    private boolean issafe(char[][] board, int row, int col, char c){
    for(int j=0;j<9;j++){
            if(j!=col && board[row][j]==c)
            return false;
        }
        for(int j=0;j<9;j++){
            if(j!=row && board[j][col]==c)
            return false;
        }
        int srow=(row/3)*3;
        int scol=(col/3)*3;
        for(int i=srow;i<=srow+2;i++){
            for(int j=scol;j<=scol+2;j++){
                if(i!=row && j!=col && board[i][j]==c)
                return false;
            }
        }
        return true;
    }
    public boolean isValidSudoku(char[][] board) {
        boolean x=false;
        int c=0;
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                if(board[i][j]!='.'){
                x=issafe(board,i,j,board[i][j]);
                if(x==false)
                return false;
                }
                else{
                    c++;
                }
                
            }  
        }
        if(c<=36)
        return true;
        return true;
    }
}
